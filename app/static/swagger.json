{
    "openapi": "3.0.0",
    "info": {
      "description": "Simple Auth Server.",
      "title": "Auth Server"
    },
    "host": "tutubo-auth-server.herokuapp.com",
    "basePath": "/swagger",
    "tags": [
      {
        "name": "users",
        "description": "Operations about user"
      }
    ],
    "schemes": [
      "https",
      "http"
    ],
    "paths": {
      "/users/register": {
        "post": {
          "tags": [
            "users"
          ],
          "summary": "Register user",
          "operationId": "createUser",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Created user object",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "olifer97@address.com"
                  },
                  "username": {
                    "type": "string",
                    "example": "olifer97"
                  },
                  "password": {
                    "type": "string",
                    "example": "123456"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User created"
            },
            "400": {
              "description": "Invalid email address"
            },
            "409": {
              "description": "User already registered"
            }
          }
        }
      },
      "/users/login": {
        "post": {
          "tags": [
            "users"
          ],
          "summary": "Logs user into the system",
          "description": "",
          "operationId": "loginUser",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Created user object",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "olifer97@address.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "123456"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User logged in",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "token": {
                        "type": "string",
                        "example": "aToken"
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "username": {
                            "type": "string",
                            "example": "olifer97"
                          },
                          "email": {
                            "type": "string",
                            "example": "olifer97@address.com"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Password incorrect"
            }
          }
        }
      },
      "/users/logout": {
        "post": {
          "tags": [
            "users"
          ],
          "summary": "Logs out current logged in user session",
          "description": "",
          "operationId": "logoutUser",
          "parameters": [],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/users/{username}": {
        "get": {
          "tags": [
            "users"
          ],
          "summary": "Get user by user name",
          "description": "",
          "operationId": "getUserByName",
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "The name that needs to be fetched. Use user1 for testing. ",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "Invalid username supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "put": {
          "tags": [
            "users"
          ],
          "summary": "Updated user",
          "description": "This can only be done by the logged in user.",
          "operationId": "updateUser",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "name that need to be updated",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "body",
              "description": "Updated user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid user supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "delete": {
          "tags": [
            "users"
          ],
          "summary": "Delete user",
          "description": "This can only be done by the logged in user.",
          "operationId": "deleteUser",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "The name that needs to be deleted",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid username supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer",
            "format": "int32",
            "description": "User Status"
          }
        },
        "xml": {
          "name": "User"
        }
      }
    }
  }